[{"/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/Home.tsx":"1","/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/apis/aq.tsx":"2","/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/components/Audio/index.tsx":"3","/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/components/Notes/index.tsx":"4","/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/components/Panel/index.tsx":"5","/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/layout.tsx":"6","/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/map-style.tsx":"7","/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/page.tsx":"8","/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/utils/formatAQ.tsx":"9"},{"size":2802,"mtime":1698671435656,"results":"10","hashOfConfig":"11"},{"size":629,"mtime":1698670337633,"results":"12","hashOfConfig":"11"},{"size":1110,"mtime":1698670405681,"results":"13","hashOfConfig":"11"},{"size":1895,"mtime":1698670523590,"results":"14","hashOfConfig":"11"},{"size":987,"mtime":1698670549340,"results":"15","hashOfConfig":"11"},{"size":456,"mtime":1698649821488,"results":"16","hashOfConfig":"11"},{"size":1321,"mtime":1698670205615,"results":"17","hashOfConfig":"11"},{"size":1790,"mtime":1698671491615,"results":"18","hashOfConfig":"11"},{"size":363,"mtime":1698658528874,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ljhjx1",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/Home.tsx",[],[],"/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/apis/aq.tsx",[],[],"/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/components/Audio/index.tsx",["49"],[],"\"use client\"\n\nimport React, { useEffect, useState } from \"react\"\n\nexport default function Audio({ noteModifiers }: { noteModifiers: any }) {\n  const [isPlaying, setIsPlaying] = useState(false)\n\n  const playNote = (note: any) => {\n    let player = document.createElement(\"audio\")\n    player.controls = false\n    player.src = `audio/${note.replace(\"#\", \"s\")}.mp3`\n    player.play()\n    player.addEventListener(\"ended\", function () {\n      player.remove()\n    })\n  }\n\n  const playSequence = (noteModifiers: any) => {\n    const baseNotes = [\"c\", \"e\", \"g\", \"b\"]\n\n    const notes = baseNotes.map((note, index) =>\n      noteModifiers[index] ? note + \"-\" + noteModifiers[index] : null\n    )\n\n    let i = 0\n\n    function loop() {\n      setTimeout(function () {\n        notes[i] && playNote(notes[i])\n        i++\n        if (i < notes.length) {\n          loop()\n        } else {\n          setIsPlaying(false)\n        }\n      }, 500)\n    }\n\n    loop()\n  }\n\n  useEffect(() => {\n    if (!isPlaying) {\n      setIsPlaying(true)\n      playSequence(noteModifiers)\n    }\n  }, [noteModifiers])\n\n  return <div id=\"audio\"></div>\n}\n","/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/components/Notes/index.tsx",["50"],[],"\"use client\"\n\nimport React, { useEffect } from \"react\"\nimport {\n  Formatter,\n  Renderer,\n  Stave,\n  StaveNote,\n  Voice,\n  Accidental,\n} from \"vexflow\"\n\nexport default function Notes({ noteModifiers }: { noteModifiers: any }) {\n  const drawSheetMusic = () => {\n    const clear = document.getElementById(\"output\")\n    while (clear && clear.lastChild) {\n      clear.removeChild(clear.lastChild)\n    }\n\n    const renderer = new Renderer(\"output\", Renderer.Backends.SVG)\n\n    renderer.resize(350, 150)\n    const context = renderer.getContext()\n\n    // Create a stave of width 400 at position 10, 40.\n    const stave = new Stave(10, 10, 450)\n\n    stave.addClef(\"treble\")\n    stave.setContext(context).draw()\n\n    const notes = [\n      noteModifiers[0] != null\n        ? new StaveNote({ keys: [\"c/4\"], duration: \"q\" }).addModifier(\n            new Accidental(noteModifiers[0])\n          )\n        : new StaveNote({ keys: [\"c/4\"], duration: \"qr\" }),\n      noteModifiers[1] != null\n        ? new StaveNote({ keys: [\"e/4\"], duration: \"q\" }).addModifier(\n            new Accidental(noteModifiers[1])\n          )\n        : new StaveNote({ keys: [\"e/4\"], duration: \"qr\" }),\n      noteModifiers[2] != null\n        ? new StaveNote({ keys: [\"g/4\"], duration: \"q\" }).addModifier(\n            new Accidental(noteModifiers[2])\n          )\n        : new StaveNote({ keys: [\"g/4\"], duration: \"qr\" }),\n      noteModifiers[3] != null\n        ? new StaveNote({ keys: [\"b/4\"], duration: \"q\" }).addModifier(\n            new Accidental(noteModifiers[3])\n          )\n        : new StaveNote({ keys: [\"b/4\"], duration: \"qr\" }),\n    ]\n\n    const voice = new Voice({ num_beats: 4, beat_value: 4 })\n    voice.addTickables(notes)\n\n    new Formatter().joinVoices([voice]).format([voice], 300)\n\n    voice.draw(context, stave)\n  }\n\n  useEffect(() => {\n    drawSheetMusic()\n  }, [noteModifiers])\n\n  return <div id=\"output\"></div>\n}\n","/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/components/Panel/index.tsx",[],[],"/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/layout.tsx",[],[],"/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/map-style.tsx",[],[],"/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/page.tsx",[],[],"/Users/JonL/Locals/[SV] Sound Vane/soundvane-next/app/utils/formatAQ.tsx",[],[],{"ruleId":"51","severity":1,"message":"52","line":47,"column":6,"nodeType":"53","endLine":47,"endColumn":21,"suggestions":"54"},{"ruleId":"51","severity":1,"message":"55","line":64,"column":6,"nodeType":"53","endLine":64,"endColumn":21,"suggestions":"56"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isPlaying' and 'playSequence'. Either include them or remove the dependency array.","ArrayExpression",["57"],"React Hook useEffect has a missing dependency: 'drawSheetMusic'. Either include it or remove the dependency array.",["58"],{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},"Update the dependencies array to be: [isPlaying, noteModifiers, playSequence]",{"range":"63","text":"64"},"Update the dependencies array to be: [drawSheetMusic, noteModifiers]",{"range":"65","text":"66"},[1058,1073],"[isPlaying, noteModifiers, playSequence]",[1842,1857],"[drawSheetMusic, noteModifiers]"]